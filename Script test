local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "  ‚ùóSword Fights on the Heights",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "N-E hub",
   LoadingSubtitle = "por DANICRAFT07070 en roblox",
   ShowText = "Dansss", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "AmberGlow", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "N-E hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "N-E hub | key",
      Subtitle = "link en el discord",
      Note = "unete al server para la key :b", -- Use this to tell the user how to get a key
      FileName = "N-E", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://raw.githubusercontent.com/DANS410124/Notingh/refs/heads/main/KEY"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MiscTab = Window:CreateTab("misc ‚ú¥Ô∏è", nil) -- Title, Image
local MiscSection = MiscTab:CreateSection("player ‚ùÑÔ∏è")

local Slider = MiscTab:CreateSlider({
   Name = "velocidad",
   Range = {0, 300},
   Increment = 1,
   Suffix = "speed",
   CurrentValue = 16,
   Flag = "Slider1", 
   Callback = function(Value)
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
    end,
})

local Slider = MiscTab:CreateSlider({
   Name = "salto",
   Range = {0, 300},
   Increment = 1,
   Suffix = "jump",
   CurrentValue = 50,
   Flag = "Slider2", 
   Callback = function(Value)
   game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
    end,
})

local reaSection = MiscTab:CreateSection("reach ‚èπÔ∏è")

local hitboxSize = 30
local hitboxActive = false
local hitboxColor = Color3.fromRGB(0, 0, 255)

local player = game:GetService("Players").LocalPlayer
player.CharacterAdded:Connect(function(char)
    ModifyHitbox(hitboxSize)
end)

local function ModifyHitbox(size)
    local player = game:GetService("Players").LocalPlayer
    local char = player.Character
    if not char then return end

    local tool = nil
    for _, v in pairs(char:GetChildren()) do
        if v:IsA("Tool") then
            tool = v
            break
        end
    end

    if not tool then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Need Tool";
            Text = "Need Tool";
            Duration = 5;
        })
        return
    end

    hitboxActive = size > 1

    if hitboxActive then
        local handle = tool:FindFirstChild("Handle")
        if handle then
            handle.Massless = true
            handle.Transparency = 1
            handle.Size = Vector3.new(size, size, size)

            local selectionBox = Instance.new("SelectionBox", handle)
            selectionBox.Adornee = handle
            selectionBox.Color3 = hitboxColor -- Color verde fijo


            spawn(function()
                while hitboxActive do
                    wait(0.5)
                end
                selectionBox:Destroy()
            end)
        end
    else
        if tool and tool:FindFirstChild("Handle") then
            local handle = tool.Handle
            handle.Size = Vector3.new(1, 1, 1)
            for _, v in pairs(handle:GetChildren()) do
                if v:IsA("SelectionBox") then
                    v:Destroy()
                end
            end
        end
    end
end

MiscTab:CreateButton({
    Name = "Increase Hitbox",
    Callback = function()
        hitboxSize = hitboxSize + 5
        ModifyHitbox(hitboxSize)
    end
})

MiscTab:CreateButton({
    Name = "Decrease Hitbox",
    Callback = function()
        if hitboxSize > 5 then
            hitboxSize = hitboxSize - 5
            ModifyHitbox(hitboxSize)
        end
    end
})

MiscTab:CreateButton({
    Name = "Reset Hitbox",
    Callback = function()
        hitboxSize = 1
        ModifyHitbox(hitboxSize)
    end
})

local MainTab = Window:CreateTab("Teleports üìç", nil) -- Title, Image
local MainSection = MainTab:CreateSection("espadas üó°Ô∏è")

Rayfield:Notify({
   Title = "disfruta este script",
   Content = "@ en youtube!",
   Duration = 4,
   Image = nil,
})

local Button = MainTab:CreateButton({
   Name = "Earthsplitter",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-186, 311, -301)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Firebrand",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-191, 348, -157)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Linked Sword (float)",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(13, 101, 12)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Illumina",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-434, 390, 68)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Sky Dagger",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(212, 141, 326)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Rusty Illumina",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(257, 138, 345)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Windforce",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(121, 637, -302)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Ghostwalker",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(403, 20, 112)
   end,
})

local Button = MainTab:CreateButton({
   Name = "ice Dagger",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(38, 251, 326)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Darkheart",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-156, 61, 211)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Hyacinth",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-303, 275, -66)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Venomshank",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(220, 222, 47)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Voidcaller",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-54, 140, 309)
   end,
})

local PlacesSection = MainTab:CreateSection("lugares ‚õ∞Ô∏è")

local Button = MainTab:CreateButton({
   Name = "zona 'segura' 1 ",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(161.999985, 686.400024, 143.5, -1, 0, 0, 0, 1, 0, 0, 0, -1)
   end,
})

local Button = MainTab:CreateButton({
   Name = "zona 'segura' 2",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(37, 502.000031, -10.5, -1, 0, 0, 0, 1, 0, 0, 0, -1)
   end,
})

local Button = MainTab:CreateButton({
   Name = "centro (abajo)",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(39, 98, -12)
   end,
})

local Button = MainTab:CreateButton({
   Name = "centro (arriba)",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(37, 248, -11)
   end,
})

local utilsSection = MainTab:CreateSection("utilidades ‚öíÔ∏è")

local Button = MainTab:CreateButton({
   Name = "Blattleshield",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(37, 284.800049, -134, -1, 0, 0, 0, 1, 0, 0, 0, -1)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Blattleshield 2",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(20.9999962, 156.399994, 216, -1, 0, 0, 0, 1, 0, 0, 0, -1)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Bloxy cola",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(38, 135.800018, 318.5, -1, 0, 0, 0, 1, 0, 0, 0, -1)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Shadowsphere",
   Callback = function()
  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-167.000015, 469.000061, 254.499985, 1, 0, 0, 0, 0, -1, 0, 1, 0)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Medikit",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(132, 340.0896, 87.5, 1, 0, 0, 0, 1, 0, 0, 0, 1)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Shieldsphere",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(176, 137.788834, 201.5, 0, 1, 0, 0, 0, 1, 1, 0, 0)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Slateskin",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(121.5, 60.2000122, -264, 1, 0, 0, 0, 1, 0, 0, 0, 1)
   end,
})

local Button = MainTab:CreateButton({
   Name = "TouchStone",
   Callback = function()
  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-176, 275, -77)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Jet boots",
   Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(141, 466, -127)
   end,
})

local visuTab = Window:CreateTab("visuales üëÅÔ∏è", nil) -- Title, Image
local MainSection = visuTab:CreateSection("esp ‚òÑÔ∏è")

local Toggle = visuTab:CreateToggle({
    Name = "esp",
    CurrentValue = false,
    Flag = "BlueHighlight",
    Callback = function(Value)
        local Players = game:GetService("Players")
        local RunService = game:GetService("RunService")

        -- Tablas para guardar lo creado
        local playerHighlights = {}
        local connections = {}

        -- Funci√≥n para eliminar todo
        local function clearAll()
            -- Desconectar eventos
            for _, conn in ipairs(connections) do
                conn:Disconnect()
            end
            connections = {}

            -- Borrar highlights y textos de todos los jugadores
            for _, player in ipairs(Players:GetPlayers()) do
                if player.Character then
                    for _, obj in ipairs(player.Character:GetChildren()) do
                        if obj:IsA("Highlight") or obj:IsA("BillboardGui") then
                            obj:Destroy()
                        end
                    end
                end
            end

            playerHighlights = {}
        end

        -- Si el toggle se apaga, limpiamos y salimos
        if not Value then
            clearAll()
            return
        end

        -- Funci√≥n para crear el highlight
        local function createHighlight(player)
            local character = player.Character or player.CharacterAdded:Wait()

            -- Evitar duplicados
            for _, obj in ipairs(character:GetChildren()) do
                if obj:IsA("Highlight") or obj:IsA("BillboardGui") then
                    obj:Destroy()
                end
            end

            local highlight = Instance.new("Highlight")
            highlight.FillTransparency = 0.5
            highlight.OutlineColor = Color3.new(1, 1, 1)
            highlight.OutlineTransparency = 0
            highlight.FillColor = Color3.new(0, 0, 1)
            highlight.Adornee = character
            highlight.Parent = character
            playerHighlights[player] = highlight

            -- Texto
            local billboardGui = Instance.new("BillboardGui")
            billboardGui.Size = UDim2.new(2, 0, 1, 0)
            billboardGui.StudsOffset = Vector3.new(0, 5, 0)
            billboardGui.AlwaysOnTop = true
            billboardGui.Parent = character

            local textLabel = Instance.new("TextLabel")
            textLabel.Size = UDim2.new(7, 0, 7, 0)
            textLabel.BackgroundTransparency = 1
            textLabel.TextColor3 = Color3.new(1, 1, 1)
            textLabel.TextScaled = true
            textLabel.Font = Enum.Font.SourceSansBold
            textLabel.TextSize = 48
            textLabel.Parent = billboardGui

            -- Conexi√≥n para actualizar texto
            table.insert(connections, RunService.Heartbeat:Connect(function()
                if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
                    local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                    textLabel.Text = "@" .. player.Name .. " | " .. math.floor(humanoid.Health)
                end
            end))
        end

        -- Crear para jugadores existentes
        for _, p in ipairs(Players:GetPlayers()) do
            createHighlight(p)
        end

        -- Evento cuando entra un jugador
        table.insert(connections, Players.PlayerAdded:Connect(function(p)
            createHighlight(p)
        end))

        -- Evento cuando respawnea
        for _, p in ipairs(Players:GetPlayers()) do
            table.insert(connections, p.CharacterAdded:Connect(function()
                createHighlight(p)
            end))
        end
    end,
})

local Toggle = visuTab:CreateToggle({
    Name = "Tracer",
    CurrentValue = false,
    Flag = "TracerToggle",
    Callback = function(Value)
        if Value then
            local player = game.Players.LocalPlayer
            local runService = game:GetService("RunService")
            local beamsFolder = Instance.new("Folder", workspace)
            beamsFolder.Name = "Tracers"
            local connection

            connection = runService.RenderStepped:Connect(function()
                beamsFolder:ClearAllChildren()

                if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
                local startPos = player.Character.HumanoidRootPart.Position

                for _, otherPlayer in pairs(game.Players:GetPlayers()) do
                    if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
                        local targetPos = otherPlayer.Character.HumanoidRootPart.Position

                        local tracer = Instance.new("Part")
                        tracer.Anchored = true
                        tracer.CanCollide = false
                        tracer.Size = Vector3.new(0.05, 0.05, (startPos - targetPos).Magnitude)
                        tracer.CFrame = CFrame.new(startPos, targetPos) * CFrame.new(0, 0, -tracer.Size.Z / 2)
                        tracer.Color = Color3.fromRGB(0, 162, 255) -- Azul
                        tracer.Material = Enum.Material.SmoothPlastic
                        tracer.Transparency = 0
                        tracer.CastShadow = false
                        tracer.Parent = beamsFolder
                    end
                end
            end)

            -- Guardamos la conexi√≥n para apagarla
            Toggle._tracerData = {connection = connection, folder = beamsFolder}
        else
            if Toggle._tracerData then
                Toggle._tracerData.connection:Disconnect()
                Toggle._tracerData.folder:ClearAllChildren()
                Toggle._tracerData.folder:Destroy()
                Toggle._tracerData = nil
            end
        end
    end,
})

local savTab = Window:CreateTab("saves", 4483362458)
local Section = savTab:CreateSection("anti-vacio")

local Toggle = savTab:CreateToggle({
    Name = "anti-void",
    CurrentValue = false,
    Flag = "TeleporterToggle",
    Callback = function(Value)
        if Value then
            -- Variables y creaci√≥n dentro del callback
            local part = Instance.new("Part")
            part.Size = Vector3.new(5000, 10, 5000)  -- 5000x10x5000
            part.Position = Vector3.new(0, 10, 0)  -- Posici√≥n
            part.Anchored = true
            part.CanCollide = false
            part.Transparency = 0
            part.BrickColor = BrickColor.new("Bright red")
            part.Parent = workspace

            -- Destino del TP
            local targetPosition = Vector3.new(37, 98, -14)

            -- Funci√≥n de teletransporte
            local function onTouch(hit)
                local character = hit.Parent
                local humanoid = character:FindFirstChildOfClass("Humanoid")

                if humanoid then
                    local rootPart = character:FindFirstChild("HumanoidRootPart")
                    if rootPart then
                        rootPart.CFrame = CFrame.new(targetPosition)
                    end
                end
            end

            -- Conectar evento
            local connection = part.Touched:Connect(onTouch)

            -- Guardar referencias para apagar despu√©s
            TogglePart = part
            ToggleConnection = connection

        else
            -- Si existe, desconectar y eliminar la parte
            if ToggleConnection then
                ToggleConnection:Disconnect()
                ToggleConnection = nil
            end
            if TogglePart then
                TogglePart:Destroy()
                TogglePart = nil
            end
        end
    end,
})

local oterTab = Window:CreateTab("otros üî©", nil)
local Section = oterTab:CreateSection("destroy‚ùå")

local Button = oterTab:CreateButton({
   Name = "destruir",
   Callback = function()
   Rayfield:Destroy()
   end,
})

local farTab = Window:CreateTab("farm üåæ", nil)
local Section = farTab:CreateSection("farmeo üë®‚Äçüåæ")

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- Guardar el jugador seleccionado desde el dropdown
local SelectedPlayer = nil

-- Dropdown para elegir jugador
local Dropdown = farTab:CreateDropdown({
    Name = "Seleccionar Jugador",
    Options = (function()
        local names = {}
        for _, plr in ipairs(Players:GetPlayers()) do
            table.insert(names, plr.Name)
        end
        return names
    end)(),
    CurrentOption = {},
    MultipleOptions = false,
    Flag = "PlayerDropdown",
    Callback = function(Options)
        SelectedPlayer = Options[1] or nil
    end,
})

-- Actualizar lista de jugadores din√°micamente
Players.PlayerAdded:Connect(function()
    local names = {}
    for _, plr in ipairs(Players:GetPlayers()) do
        table.insert(names, plr.Name)
    end
    Dropdown:SetOptions(names)
end)

Players.PlayerRemoving:Connect(function(player)
    local names = {}
    for _, plr in ipairs(Players:GetPlayers()) do
        table.insert(names, plr.Name)
    end
    Dropdown:SetOptions(names)

    if SelectedPlayer == player.Name then
        SelectedPlayer = nil
    end
end)

-- Toggle para seguir al jugador
local FollowConnection = nil
local SavedCFrame = nil

local Toggle = farTab:CreateToggle({
    Name = "Seguir Jugador",
    CurrentValue = false,
    Flag = "FollowToggle",
    Callback = function(Value)
        local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local root = character:WaitForChild("HumanoidRootPart")

        if Value then
            -- Guardar la posici√≥n actual antes de seguir
            SavedCFrame = root.CFrame

            -- Conectar loop para teletransportarse detr√°s del jugador seleccionado
            FollowConnection = RunService.RenderStepped:Connect(function()
                if SelectedPlayer then
                    local target = Players:FindFirstChild(SelectedPlayer)
                    if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                        local targetRoot = target.Character.HumanoidRootPart
                        -- Posici√≥n detr√°s del jugador (ejemplo: -3 studs en Z)
                        local behindCFrame = targetRoot.CFrame * CFrame.new(0, 0, 3)
                        root.CFrame = behindCFrame
                    end
                end
            end)
        else
            -- Desactivar: volver a la posici√≥n original
            if FollowConnection then
                FollowConnection:Disconnect()
                FollowConnection = nil
            end
            if SavedCFrame then
                root.CFrame = SavedCFrame
                SavedCFrame = nil
            end
        end
    end,
})

local Section = farTab:CreateSection("auto-click üëÜ")

local player = game:GetService("Players").LocalPlayer
local RunService = game:GetService("RunService")

-- Estado del toggle
local ToggleConnection = nil

local Toggle = farTab:CreateToggle({
   Name = "Auto-click",
   CurrentValue = false,
   Flag = "AutoHitToggle",
   Callback = function(Value)
      if Value then
         -- Activar: conectar el bucle
         ToggleConnection = RunService.RenderStepped:Connect(function()
            local p = game.Players:GetPlayers()
            for i = 2, #p do
                local v = p[i].Character
                if v and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") then
                    local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
                    if tool and tool:FindFirstChild("Handle") then
                        tool:Activate()
                        for _, part in next, v:GetChildren() do
                            if part:IsA("BasePart") then
                                firetouchinterest(tool.Handle, part, 0)
                                firetouchinterest(tool.Handle, part, 1)
                            end
                        end
                    end
                end
            end
         end)
      else
         -- Desactivar: desconectar el bucle
         if ToggleConnection then
            ToggleConnection:Disconnect()
            ToggleConnection = nil
         end
      end
   end,
})
